"use strict";
var _a;
var BlockPos_1, ChunkPos_1, ChunkBlockPos_1, Vec2_1, Vec3_1, RelativeFloat_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelativeFloat = exports.Vec3 = exports.Vec2 = exports.ChunkBlockPos = exports.ChunkPos = exports.BlockPos = exports.Facing = void 0;
const tslib_1 = require("tslib");
const commandparam_1 = require("../commandparam");
const common_1 = require("../common");
const nativeclass_1 = require("../nativeclass");
const nativetype_1 = require("../nativetype");
const prochacker_1 = require("../prochacker");
const symbols_1 = require("./symbols");
var Facing;
(function (Facing) {
    Facing[Facing["Down"] = 0] = "Down";
    Facing[Facing["Up"] = 1] = "Up";
    Facing[Facing["North"] = 2] = "North";
    Facing[Facing["South"] = 3] = "South";
    Facing[Facing["West"] = 4] = "West";
    Facing[Facing["East"] = 5] = "East";
    Facing[Facing["Max"] = 6] = "Max";
})(Facing = exports.Facing || (exports.Facing = {}));
(function (Facing) {
    Facing.convertYRotationToFacingDirection = prochacker_1.procHacker.js("?convertYRotationToFacingDirection@Facing@@SAEM@Z", nativetype_1.uint8_t, null, nativetype_1.float32_t);
})(Facing = exports.Facing || (exports.Facing = {}));
let BlockPos = BlockPos_1 = class BlockPos extends nativeclass_1.NativeStruct {
    set(pos) {
        this.x = pos.x;
        this.y = pos.y;
        this.z = pos.z;
    }
    equal(pos) {
        return this.x === pos.x && this.y === pos.y && this.z === pos.z;
    }
    abs() {
        return BlockPos_1.create(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z));
    }
    inc(a, b = 0, c = 0) {
        if (typeof a === "number") {
            return BlockPos_1.create(this.x + (a | 0), this.y + (b | 0), this.z + (c | 0));
        }
        else {
            return this.inc(a.x, a.y, a.z);
        }
    }
    dec(a, b = 0, c = 0) {
        if (typeof a === "number") {
            return this.inc(-a, -b, -c);
        }
        else {
            return this.inc(-a.x, -a.y, -a.z);
        }
    }
    multiply(times) {
        return BlockPos_1.create((this.x * times) | 0, this.y * times, (this.z * times) | 0);
    }
    divide(times) {
        return BlockPos_1.create((this.x / times) | 0, (this.y / times) | 0, (this.z / times) | 0);
    }
    lengthSquared() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    normalize() {
        const len = this.lengthSquared();
        if (len > 0) {
            return this.divide(Math.sqrt(len));
        }
        return BlockPos_1.create(0, 0, 0);
    }
    getSide(side, step = 1) {
        switch (side) {
            case Facing.Down:
                return this.dec(0, step, 0);
            case Facing.Up:
                return this.inc(0, step, 0);
            case Facing.North:
                return this.dec(0, 0, step);
            case Facing.South:
                return this.inc(0, 0, step);
            case Facing.West:
                return this.dec(step, 0, 0);
            case Facing.East:
                return this.inc(step, 0, 0);
            default:
                return this;
        }
    }
    relative(facing, steps) {
        (0, common_1.abstract)();
    }
    static create(a, b = 0, c = 0) {
        if (typeof a === "number") {
            const v = new BlockPos_1(true);
            v.x = Math.floor(a);
            v.y = Math.floor(b);
            v.z = Math.floor(c);
            return v;
        }
        else {
            return BlockPos_1.create(a.x, a.y, a.z);
        }
    }
    toJSON() {
        return { x: this.x, y: this.y, z: this.z };
    }
};
BlockPos.MIN = symbols_1.proc["?MIN@BlockPos@@2V1@B"].as(BlockPos_1);
BlockPos.MAX = symbols_1.proc["?MAX@BlockPos@@2V1@B"].as(BlockPos_1);
BlockPos.ZERO = symbols_1.proc["?ZERO@BlockPos@@2V1@B"].as(BlockPos_1);
BlockPos.ONE = symbols_1.proc["?ONE@BlockPos@@2V1@B"].as(BlockPos_1);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.int32_t)
], BlockPos.prototype, "x", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.int32_t)
], BlockPos.prototype, "y", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.int32_t)
], BlockPos.prototype, "z", void 0);
BlockPos = BlockPos_1 = tslib_1.__decorate([
    (0, nativeclass_1.nativeClass)()
], BlockPos);
exports.BlockPos = BlockPos;
BlockPos.prototype.relative = prochacker_1.procHacker.js("?relative@BlockPos@@QEBA?AV1@EH@Z", BlockPos, { this: BlockPos, structureReturn: true }, nativetype_1.uint8_t, nativetype_1.int32_t);
let ChunkPos = ChunkPos_1 = class ChunkPos extends nativeclass_1.NativeStruct {
    set(pos) {
        this.x = pos.x;
        this.z = pos.z;
    }
    static create(a, b) {
        const v = new ChunkPos_1(true);
        if (typeof a === "number") {
            v.x = a;
            v.z = b;
        }
        else {
            v.x = a.x >> 4;
            v.z = a.z >> 4;
        }
        return v;
    }
    toJSON() {
        return { x: this.x, z: this.z };
    }
};
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.int32_t)
], ChunkPos.prototype, "x", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.int32_t)
], ChunkPos.prototype, "z", void 0);
ChunkPos = ChunkPos_1 = tslib_1.__decorate([
    (0, nativeclass_1.nativeClass)()
], ChunkPos);
exports.ChunkPos = ChunkPos;
let ChunkBlockPos = ChunkBlockPos_1 = class ChunkBlockPos extends nativeclass_1.NativeStruct {
    set(pos) {
        this.x = pos.x;
        this.y = pos.y;
        this.z = pos.z;
    }
    static create(a, b, c) {
        const v = new ChunkBlockPos_1(true);
        if (typeof a === "number") {
            v.x = a;
            v.y = b;
            v.z = c;
        }
        else {
            v.x = a.x & 0xf;
            v.y = a.y;
            v.z = a.z & 0xf;
        }
        return v;
    }
    toJSON() {
        return { x: this.x, y: this.y, z: this.z };
    }
};
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.uint8_t)
], ChunkBlockPos.prototype, "x", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.uint16_t)
], ChunkBlockPos.prototype, "y", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.uint8_t)
], ChunkBlockPos.prototype, "z", void 0);
ChunkBlockPos = ChunkBlockPos_1 = tslib_1.__decorate([
    (0, nativeclass_1.nativeClass)()
], ChunkBlockPos);
exports.ChunkBlockPos = ChunkBlockPos;
let Vec2 = Vec2_1 = class Vec2 extends nativeclass_1.NativeStruct {
    set(pos) {
        this.x = pos.x;
        this.y = pos.y;
    }
    static create(x, y) {
        const v = new Vec2_1(true);
        if (typeof x === "number") {
            v.x = x;
            v.y = y;
        }
        else {
            v.x = x.x;
            v.y = x.y;
        }
        return v;
    }
    toJSON() {
        return { x: this.x, y: this.y };
    }
};
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.float32_t)
], Vec2.prototype, "x", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.float32_t)
], Vec2.prototype, "y", void 0);
Vec2 = Vec2_1 = tslib_1.__decorate([
    (0, nativeclass_1.nativeClass)()
], Vec2);
exports.Vec2 = Vec2;
let Vec3 = Vec3_1 = class Vec3 extends nativeclass_1.NativeStruct {
    set(pos) {
        this.x = pos.x;
        this.y = pos.y;
        this.z = pos.z;
    }
    distance(pos) {
        return Math.sqrt(this.distanceSq(pos));
    }
    distanceSq(pos) {
        const xdist = this.x - pos.x;
        const ydist = this.y - pos.y;
        const zdist = this.z - pos.z;
        return xdist * xdist + ydist * ydist + zdist * zdist;
    }
    equal(pos) {
        return this.x === pos.x && this.y === pos.y && this.z === pos.z;
    }
    floor() {
        return Vec3_1.create(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z));
    }
    ceil() {
        return Vec3_1.create(Math.ceil(this.x), Math.ceil(this.y), Math.ceil(this.z));
    }
    round() {
        return Vec3_1.create(Math.round(this.x), Math.round(this.y), Math.round(this.z));
    }
    abs() {
        return Vec3_1.create(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z));
    }
    inc(a, b = 0, c = 0) {
        if (typeof a === "number") {
            return Vec3_1.create(this.x + a, this.y + b, this.z + c);
        }
        else {
            return this.inc(a.x, a.y, a.z);
        }
    }
    dec(a, b = 0, c = 0) {
        if (typeof a === "number") {
            return this.inc(-a, -b, -c);
        }
        else {
            return this.inc(-a.x, -a.y, -a.z);
        }
    }
    multiply(times) {
        return Vec3_1.create(this.x * times, this.y * times, this.z * times);
    }
    divide(times) {
        return Vec3_1.create(this.x / times, this.y / times, this.z / times);
    }
    lengthSquared() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    normalize() {
        const len = this.lengthSquared();
        if (len > 0) {
            return this.divide(Math.sqrt(len));
        }
        return Vec3_1.create(0, 0, 0);
    }
    getSide(side, step = 1) {
        switch (side) {
            case Facing.Down:
                return this.dec(0, step, 0);
            case Facing.Up:
                return this.inc(0, step, 0);
            case Facing.North:
                return this.dec(0, 0, step);
            case Facing.South:
                return this.inc(0, 0, step);
            case Facing.West:
                return this.dec(step, 0, 0);
            case Facing.East:
                return this.inc(step, 0, 0);
            default:
                return this;
        }
    }
    static create(a, b, c) {
        const v = new Vec3_1(true);
        if (typeof a === "number") {
            v.x = a;
            v.y = b;
            v.z = c;
        }
        else {
            v.x = a.x;
            v.y = a.y;
            v.z = a.z;
        }
        return v;
    }
    toJSON() {
        return { x: this.x, y: this.y, z: this.z };
    }
    static directionFromRotation(rotation) {
        (0, common_1.abstract)();
    }
    static rotationFromDirection(direction) {
        (0, common_1.abstract)();
    }
};
Vec3.MIN = symbols_1.proc["?MIN@Vec3@@2V1@B"].as(Vec3_1);
Vec3.MAX = symbols_1.proc["?MAX@Vec3@@2V1@B"].as(Vec3_1);
Vec3.ZERO = symbols_1.proc["?ZERO@Vec3@@2V1@B"].as(Vec3_1);
Vec3.HALF = symbols_1.proc["?HALF@Vec3@@2V1@B"].as(Vec3_1);
Vec3.ONE = symbols_1.proc["?ONE@Vec3@@2V1@B"].as(Vec3_1);
Vec3.TWO = symbols_1.proc["?TWO@Vec3@@2V1@B"].as(Vec3_1);
Vec3.UNIT_X = symbols_1.proc["?UNIT_X@Vec3@@2V1@B"].as(Vec3_1);
Vec3.NEG_UNIT_X = symbols_1.proc["?NEG_UNIT_X@Vec3@@2V1@B"].as(Vec3_1);
Vec3.UNIT_Y = symbols_1.proc["?UNIT_Y@Vec3@@2V1@B"].as(Vec3_1);
Vec3.NEG_UNIT_Y = symbols_1.proc["?NEG_UNIT_Y@Vec3@@2V1@B"].as(Vec3_1);
Vec3.UNIT_Z = symbols_1.proc["?UNIT_Z@Vec3@@2V1@B"].as(Vec3_1);
Vec3.NEG_UNIT_Z = symbols_1.proc["?NEG_UNIT_Z@Vec3@@2V1@B"].as(Vec3_1);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.float32_t)
], Vec3.prototype, "x", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.float32_t)
], Vec3.prototype, "y", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.float32_t)
], Vec3.prototype, "z", void 0);
Vec3 = Vec3_1 = tslib_1.__decorate([
    (0, nativeclass_1.nativeClass)()
], Vec3);
exports.Vec3 = Vec3;
Vec3.directionFromRotation = prochacker_1.procHacker.js("?directionFromRotation@Vec3@@SA?AV1@AEBVVec2@@@Z", Vec3, { structureReturn: true }, Vec2);
Vec3.rotationFromDirection = prochacker_1.procHacker.js("?rotationFromDirection@Vec3@@SA?AVVec2@@AEBV1@@Z", Vec2, { structureReturn: true }, Vec3);
let RelativeFloat = RelativeFloat_1 = class RelativeFloat extends nativeclass_1.NativeStruct {
    set(pos) {
        this.value = pos.value;
        this.is_relative = pos.is_relative;
    }
    static create(value, is_relative) {
        const v = new RelativeFloat_1(true);
        v.value = value;
        v.is_relative = is_relative;
        return v;
    }
};
commandparam_1.CommandParameterType.symbol, _a = nativetype_1.NativeType.registerDirect;
RelativeFloat[_a] = true;
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.float32_t)
], RelativeFloat.prototype, "value", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.bool_t)
], RelativeFloat.prototype, "is_relative", void 0);
tslib_1.__decorate([
    (0, nativeclass_1.nativeField)(nativetype_1.bin64_t, 0)
], RelativeFloat.prototype, "bin_value", void 0);
RelativeFloat = RelativeFloat_1 = tslib_1.__decorate([
    (0, nativeclass_1.nativeClass)()
], RelativeFloat);
exports.RelativeFloat = RelativeFloat;
//# sourceMappingURL=data:application/json;base64,